<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--abstract为true时仅作为模板给子类继承用，不实例化对象。如果一个bean没有指定class，那么该bean必须是一个抽象bean-->
    <bean id="address" class="spring1.spring.bean.autowire.Address" abstract="true">
        <property name="city" value="BeiJing"></property>
        <property name="street" value="WuDaoKou"></property>
    </bean>

    <!--配置的继承，使用bean的parent的属性，继承了bean属性的配置，也可以覆盖从父bean继承过来的配置-->
    <!--depends-on表示bean依赖于car，car会在当前bean创建之前创建好，但不会给当前bean赋值，如果依赖多个bean，则可以用，分隔-->
    <bean id="car" class="spring1.spring.bean.Car" p:brand="Audi" p:price="300000"></bean>
    <bean id="address2" parent="address" depends-on="car">
        <property name="street" value="WuDaoKou"></property>
    </bean>

</beans>